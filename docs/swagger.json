{
  "swagger": "2.0",
  "info": {
    "title": "FSC Finance App API",
    "description": "API for FSC Finance App that allows users to manage their finances.",
    "version": "1.0.0"
  },
  "paths": {
    "/api/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/{userId}/balance": {
      "get": {
        "summary": "get user balance by user ID",
        "tags": ["Users"],
        "operationId": "getUserBalance",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User balance found",
            "schema": {
              "$ref": "#/definitions/UserBalance"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Create a new transaction",
        "operationId": "createTransaction",
        "parameters": [
          {
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTransactionParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "schema": {
              "$ref": "#/definitions/CreateTransactionParams"
            }
          },
          "400": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/InvalidParamsResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "get": {
        "summary": "Get Transactions by UserID",
        "tags": ["Transactions"],
        "operationId": "getTransactionsByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/UserNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "patch": {
        "tags": ["Transactions"],
        "summary": "Update transaction by ID",
        "operationId": "updateTransactionById",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateTransactionParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction updated successfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "Delete transaction",
        "operationId": "deleteTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deleted successfully",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/TransactionNotFoundResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "2b470cbb-ed7b-4e5d-8a59-360119f2c410"
        },
        "first_name": {
          "type": "string",
          "example": "Jhon"
        },
        "last_name": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "jhon@doe.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "CreateUserParams": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Jhon",
          "required": true
        },
        "last_name": {
          "type": "string",
          "example": "Doe",
          "required": true
        },
        "email": {
          "type": "string",
          "example": "jhon@doe.com",
          "required": true
        },
        "password": {
          "type": "string",
          "example": "password",
          "required": true
        }
      }
    },
    "UserBalance": {
      "type": "object",
      "properties": {
        "earnings": {
          "type": "number",
          "example": "10000"
        },
        "expenses": {
          "type": "number",
          "example": "1000"
        },
        "investments": {
          "type": "number",
          "example": "3000"
        },
        "balance": {
          "type": "number",
          "example": "6000"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "2b470cbb-ed7b-4e5d-8a59-360119f2c410"
        },
        "user_id": {
          "type": "string",
          "example": "fa73e4d3-b9fe-41a5-908f-787cebf79106"
        },
        "name": {
          "type": "string",
          "example": "Salary"
        },
        "amount": {
          "type": "number",
          "example": "10000"
        },
        "type": {
          "type": "string",
          "example": "EARNING",
          "description": "EARNING | EXPENSE | INVESTMENT"
        },
        "date": {
          "type": "string",
          "example": "2023-01-01T00:00:00.000Z"
        }
      }
    },
    "CreateTransactionParams": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": "fa73e4d3-b9fe-41a5-908f-787cebf79106",
          "required": true
        },
        "name": {
          "type": "string",
          "example": "Salary",
          "required": true
        },
        "amount": {
          "type": "number",
          "example": "10000",
          "required": true
        },
        "type": {
          "type": "string",
          "example": "EARNING",
          "description": "EARNING | EXPENSE | INVESTMENT",
          "required": true
        },
        "date": {
          "type": "string",
          "example": "2023-01-01T00:00:00.000Z",
          "required": true
        }
      }
    },
    "UpdateTransactionParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Salary"
        },
        "amount": {
          "type": "number",
          "example": "10000"
        },
        "type": {
          "type": "string",
          "example": "EARNING",
          "description": "EARNING | EXPENSE | INVESTMENT"
        },
        "date": {
          "type": "string",
          "example": "2023-01-01T00:00:00.000Z"
        }
      }
    },
    "InternalServerErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    },
    "UserNotFoundResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User not found"
        }
      }
    },
    "TransactionNotFoundResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Transaction not found"
        }
      }
    },
    "InvalidParamsResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Invalid params"
        }
      }
    },
    "InvalidIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "The provided ID is not valid."
        }
      }
    }
  }
}
